/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Form_View;

import DTO.DTO_Ctsp;
import DTO.DTO_DanhSachSanPham;
import DTO.DTO_MauSacAndGia_CTSP;
import DTO.DTO_SanPham_CTSP;
import Model.MD_Hang_CN;
import Model.MD_LoaiSP_CN;
import Model.MD_SanPham_CN;
import Service.SV_CTSP;
import Service.SV_DanhSachSanPham;
import Service.SV_Hang;
import java.io.File;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author 84904
 */
public class Form_DanhSachSanPham extends javax.swing.JPanel {
//    https://stackhowto.com/how-to-dynamically-filter-jtable-from-textfield-in-java/#google_vignette

    TableRowSorter<TableModel> rowSorter; // công nghệ lọc bảng 
    SV_Hang SVHang = new SV_Hang();
    SV_DanhSachSanPham svDSSP = new SV_DanhSachSanPham();
    SV_CTSP svCTSP = new SV_CTSP();

    DefaultTableModel tblModel;
    List<DTO_DanhSachSanPham> listdto = new ArrayList<>();
    List<MD_Hang_CN> listHang = SVHang.selectAllHang();
    List<MD_LoaiSP_CN> listLoaiSP = svDSSP.selectAllLoaiSanPham();
    List<DTO_DanhSachSanPham> listSP_XuatFile = new ArrayList<>();
    List<DTO_SanPham_CTSP> dtoSP_CTSP = new ArrayList<>();

    Integer idSanPham_ToanCuc;
    Integer id1;//id Hãng - insert sản phẩm
    Integer id2;//id Loại sản phẩm - insert sản phẩm
    String linkImage;
    ImageIcon iconImage;
    List<Integer> idsp_LayAllXuatFile;

    /**
     * Creates new form Form_SanPham
     */
    public Form_DanhSachSanPham() {
        initComponents();

        initTable();
        initCboHang();
        initCboLoaiSanPham();

        listdto = svDSSP.selectAllDSS();
        filltableSanPham(listdto);

        //Lọc Banhgr Danh sách sản phẩm
        rowSorter = new TableRowSorter<>(tblDanhSachSanPham.getModel());
        tblDanhSachSanPham.setRowSorter(rowSorter);

        rdoHoatDong.setEnabled(false);
        rdoNgungHoatDong.setEnabled(false);
        rdoHoatDong.setSelected(true);

        int imageWidth = 60; // Thay đổi giá trị này để thiết lập chiều rộng của ảnh
        int imageHeight = 60; // Thay đổi giá trị này để thiết lập chiều cao của ảnh

// Sử dụng myTableCellRenderer cho cột "Ảnh" trong tblDanhSachSanPham
        tblDanhSachSanPham.getColumn("Ảnh").setCellRenderer(new myTableCellRenderer(imageWidth, imageHeight));
        tblDanhSachSanPham.setRowHeight(imageHeight); // Set row height to accommodate the image

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jpnImageSanPham = new javax.swing.JPanel();
        txtImageSanPham = new javax.swing.JLabel();
        panel_Custom1 = new Swing_Custom.Panel_Custom();
        jLabel3 = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        txtTenSanPham = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cboLoaiSanPham = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        rdoHoatDong = new javax.swing.JRadioButton();
        rdoNgungHoatDong = new javax.swing.JRadioButton();
        btnThemMoiSanPham = new Swing_Custom.CustomButton1();
        btnSua = new Swing_Custom.CustomButton1();
        btnXoa = new Swing_Custom.CustomButton1();
        btnLamMoi = new Swing_Custom.CustomButton1();
        cboHang = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        panel_Custom2 = new Swing_Custom.Panel_Custom();
        jLabel7 = new javax.swing.JLabel();
        cboChiTietSanPham = new javax.swing.JComboBox<>();
        btnChiTietSanPham = new Swing_Custom.CustomButton1();
        jLabel9 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        panel_Custom3 = new Swing_Custom.Panel_Custom();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDanhSachSanPham = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        txtTimKiemDanhSachSanPham = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 153, 102));

        jpnImageSanPham.setPreferredSize(new java.awt.Dimension(412, 548));

        txtImageSanPham.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtImageSanPham.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtImageSanPham.setText("Ảnh sản phẩm");
        txtImageSanPham.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        txtImageSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtImageSanPhamMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpnImageSanPhamLayout = new javax.swing.GroupLayout(jpnImageSanPham);
        jpnImageSanPham.setLayout(jpnImageSanPhamLayout);
        jpnImageSanPhamLayout.setHorizontalGroup(
            jpnImageSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtImageSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpnImageSanPhamLayout.setVerticalGroup(
            jpnImageSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtImageSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panel_Custom1.setRoundBottomLeft(20);
        panel_Custom1.setRoundBottomRight(20);
        panel_Custom1.setRoundTopLeft(20);
        panel_Custom1.setRoundTopRight(20);

        jLabel3.setText("Mã sản phẩm");

        txtMaSanPham.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txtMaSanPham.setForeground(new java.awt.Color(101, 85, 143));
        txtMaSanPham.setPreferredSize(new java.awt.Dimension(300, 30));

        txtTenSanPham.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txtTenSanPham.setForeground(new java.awt.Color(101, 85, 143));
        txtTenSanPham.setPreferredSize(new java.awt.Dimension(300, 41));

        jLabel4.setText("Tên sản phẩm");

        jLabel5.setText("Hãng");

        jLabel6.setText("Loại sản phẩm");

        cboLoaiSanPham.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        cboLoaiSanPham.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLoaiSanPham.setPreferredSize(new java.awt.Dimension(300, 41));

        jLabel8.setText("Trạng Thái");

        buttonGroup1.add(rdoHoatDong);
        rdoHoatDong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rdoHoatDong.setForeground(new java.awt.Color(101, 85, 143));
        rdoHoatDong.setText("Hoạt Động");

        buttonGroup1.add(rdoNgungHoatDong);
        rdoNgungHoatDong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rdoNgungHoatDong.setForeground(new java.awt.Color(101, 85, 143));
        rdoNgungHoatDong.setText("Ngưng Hoạt Động");
        rdoNgungHoatDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNgungHoatDongActionPerformed(evt);
            }
        });

        btnThemMoiSanPham.setBackground(new java.awt.Color(101, 85, 143));
        btnThemMoiSanPham.setForeground(new java.awt.Color(255, 255, 255));
        btnThemMoiSanPham.setText("Thêm mới sản phẩm");
        btnThemMoiSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemMoiSanPhamActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(101, 85, 143));
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(101, 85, 143));
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(255, 255, 255));
        btnLamMoi.setText("Làm Mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        cboHang.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        cboHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboHang.setPreferredSize(new java.awt.Dimension(300, 41));

        jLabel11.setText("Mô tả");

        txtMoTa.setColumns(20);
        txtMoTa.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtMoTa.setForeground(new java.awt.Color(101, 85, 143));
        txtMoTa.setRows(5);
        jScrollPane1.setViewportView(txtMoTa);

        javax.swing.GroupLayout panel_Custom1Layout = new javax.swing.GroupLayout(panel_Custom1);
        panel_Custom1.setLayout(panel_Custom1Layout);
        panel_Custom1Layout.setHorizontalGroup(
            panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_Custom1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11)
                    .addGroup(panel_Custom1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(39, 39, 39)
                        .addComponent(rdoHoatDong)
                        .addGap(18, 18, 18)
                        .addComponent(rdoNgungHoatDong))
                    .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panel_Custom1Layout.createSequentialGroup()
                            .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_Custom1Layout.createSequentialGroup()
                                    .addComponent(cboHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(26, 26, 26))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_Custom1Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(266, 266, 266)))
                            .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(cboLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(panel_Custom1Layout.createSequentialGroup()
                            .addComponent(btnThemMoiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_Custom1Layout.createSequentialGroup()
                        .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(26, 26, 26)
                        .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30))
        );
        panel_Custom1Layout.setVerticalGroup(
            panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_Custom1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(6, 6, 6)
                .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(6, 6, 6)
                .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(rdoHoatDong)
                    .addComponent(rdoNgungHoatDong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_Custom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemMoiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        panel_Custom2.setRoundBottomLeft(20);
        panel_Custom2.setRoundBottomRight(20);
        panel_Custom2.setRoundTopLeft(20);
        panel_Custom2.setRoundTopRight(20);

        jLabel7.setText("Chi tiết sản phẩm");

        cboChiTietSanPham.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        cboChiTietSanPham.setPreferredSize(new java.awt.Dimension(300, 30));
        cboChiTietSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboChiTietSanPhamMouseClicked(evt);
            }
        });
        cboChiTietSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboChiTietSanPhamActionPerformed(evt);
            }
        });

        btnChiTietSanPham.setBackground(new java.awt.Color(101, 85, 143));
        btnChiTietSanPham.setForeground(new java.awt.Color(255, 255, 255));
        btnChiTietSanPham.setText("Chi tiết sản phẩm");
        btnChiTietSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTietSanPhamActionPerformed(evt);
            }
        });

        jLabel9.setText("Giá bán");

        txtGia.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txtGia.setForeground(new java.awt.Color(255, 51, 51));
        txtGia.setEnabled(false);
        txtGia.setPreferredSize(new java.awt.Dimension(300, 30));

        javax.swing.GroupLayout panel_Custom2Layout = new javax.swing.GroupLayout(panel_Custom2);
        panel_Custom2.setLayout(panel_Custom2Layout);
        panel_Custom2Layout.setHorizontalGroup(
            panel_Custom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_Custom2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panel_Custom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_Custom2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panel_Custom2Layout.createSequentialGroup()
                        .addGroup(panel_Custom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(panel_Custom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtGia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(panel_Custom2Layout.createSequentialGroup()
                                    .addComponent(cboChiTietSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnChiTietSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(22, Short.MAX_VALUE))))
        );
        panel_Custom2Layout.setVerticalGroup(
            panel_Custom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_Custom2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_Custom2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnChiTietSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboChiTietSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        panel_Custom3.setRoundBottomLeft(20);
        panel_Custom3.setRoundBottomRight(20);
        panel_Custom3.setRoundTopLeft(20);
        panel_Custom3.setRoundTopRight(20);

        tblDanhSachSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhSachSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachSanPhamMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblDanhSachSanPhamMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(tblDanhSachSanPham);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Danh Sách Sản Phẩm");

        txtTimKiemDanhSachSanPham.setBackground(new java.awt.Color(137, 137, 137));
        txtTimKiemDanhSachSanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTimKiemDanhSachSanPham.setForeground(new java.awt.Color(255, 255, 255));
        txtTimKiemDanhSachSanPham.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTimKiemDanhSachSanPham.setToolTipText("Tìm kiếm sản phẩm theo mã hoặc tên .");
        txtTimKiemDanhSachSanPham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemDanhSachSanPhamKeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 102, 102));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Xuất Fille");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_Custom3Layout = new javax.swing.GroupLayout(panel_Custom3);
        panel_Custom3.setLayout(panel_Custom3Layout);
        panel_Custom3Layout.setHorizontalGroup(
            panel_Custom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_Custom3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_Custom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1052, Short.MAX_VALUE)
                    .addGroup(panel_Custom3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTimKiemDanhSachSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panel_Custom3Layout.setVerticalGroup(
            panel_Custom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_Custom3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_Custom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_Custom3Layout.createSequentialGroup()
                        .addGap(0, 17, Short.MAX_VALUE)
                        .addComponent(jLabel10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_Custom3Layout.createSequentialGroup()
                        .addGroup(panel_Custom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTimKiemDanhSachSanPham)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(1, 1, 1)))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel_Custom3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jpnImageSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                            .addComponent(panel_Custom2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(panel_Custom1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpnImageSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panel_Custom2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panel_Custom1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panel_Custom3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    public void initTable() {
        DefaultTableModel model = (DefaultTableModel) tblDanhSachSanPham.getModel();
        model.setColumnIdentifiers(new Object[]{"ID", "Mã Sản Phẩm", "Ảnh", "Tên Sản Phẩm", "Loại", "Hãng", "Mô Tả", "Trạng Thái", "Ngày Tạo", "Ngày Sửa", ""});
    }

    public void initCboHang() {

        DefaultComboBoxModel model = (DefaultComboBoxModel) cboHang.getModel();
        model.removeAllElements();
        for (MD_Hang_CN h : listHang) {
            model.addElement(h.getTenHang());
        }
        cboHang.setSelectedIndex(0);

    }

    public void initCboLoaiSanPham() {

        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiSanPham.getModel();
        model.removeAllElements();
        for (MD_LoaiSP_CN lsp : listLoaiSP) {
            model.addElement(lsp.getTenLoaiSanPham());
        }
        cboHang.setSelectedIndex(0);
    }

    public void initCboChiTietSanPham(Integer idSP) {

        DefaultComboBoxModel model = (DefaultComboBoxModel) cboChiTietSanPham.getModel();
        model.removeAllElements();
        List<DTO_MauSacAndGia_CTSP> list = svDSSP.selectCTSPMauSacandCTSPGiaByIDSanPham(idSP);
        for (DTO_MauSacAndGia_CTSP msg : list) {
            model.addElement(msg.getMauSac());
        }
        cboHang.setSelectedIndex(0);

    }
//ImageIcon icon = new l.getAnhSanPham());

    public void filltableSanPham(List<DTO_DanhSachSanPham> dto) {
        tblModel = (DefaultTableModel) tblDanhSachSanPham.getModel();
        tblModel.setRowCount(0);
        for (DTO_DanhSachSanPham l : dto) {
            Object[] row = new Object[10];
            row[0] = l.getIdSanPham();
            row[1] = l.getMaSanPham();
            // Thay đổi này: Thiết lập đối tượng ImageIcon cho hàng

            ImageIcon icon = new ImageIcon(l.getAnhSanPham());
            JLabel label = new JLabel();
            label.setIcon(icon);
            label.setHorizontalAlignment(JLabel.CENTER);
            row[2] = label;
//        row[2] = l.getAnhSanPham();

            row[3] = l.getTenSanPham();
            row[4] = l.getTenLoaiSP();
            row[5] = l.getTenHang();
            row[6] = l.getMoTa();
            row[7] = l.getTrangThai();
            row[8] = l.getNgayTao();
            row[9] = l.getNgaySua();

//            row[10] = checkClickSP;
            tblModel.addRow(row);
        }
    }

    public MD_SanPham_CN getModel(Integer idhangcus, Integer idLoaiSPcus) {
        MD_SanPham_CN mdsp = new MD_SanPham_CN();
//        if (checkImageFileExtension(txtImageSanPham.getIcon().toString())==true) {
//            System.out.println("IMAGE1 =====================" + txtImageSanPham.getIcon() + toString());
//        } else if (checkImageFileExtension(txtImageSanPham.getIcon().toString())==false) {
//            mdsp.setAnhSanPham(iconImage.toString());
//            System.out.println("IMAGE2 =====================" + iconImage);
//        }
//        System.out.println("IMAGE 3 =====================" + txtImageSanPham.getIcon() + toString());

//        if(checkImageFileExtension(txtImageSanPham.getIcon().toString()) == true){
//                        mdsp.setAnhSanPham(txtImageSanPham.getIcon().toString());//ImageIcon iconImage
//        }else{
//            mdsp.setAnhSanPham(iconImage.toString());
//        }
        mdsp.setMaSanPham(txtMaSanPham.getText());
        mdsp.setTenSanPham(txtTenSanPham.getText());
        if (rdoHoatDong.isSelected()) {
            mdsp.setTrangThai("Hoạt động");
        } else if (rdoNgungHoatDong.isSelected()) {
            mdsp.setTrangThai("Ngưng hoạt động");
        }
//        mdsp.setNgayTao(null);
        mdsp.setHang(idhangcus);
        mdsp.setLoaiSanPham(idLoaiSPcus);
        mdsp.setMoTa(txtMoTa.getText());
        mdsp.setAnhSanPham(linkImage);
        return mdsp;
    }

    public static String tachLinkAnh(String filename) {
        int endOfPath = filename.indexOf('F'); // Giả định thông tin không cần thiết bắt đầu từ ký tự 'F'
        if (endOfPath > 0) {
            return filename.substring(0, endOfPath).trim(); // Cắt và trả về đường dẫn ảnh
        }
        return filename.trim(); // Trả về toàn bộ chuỗi nếu không tìm thấy phần không cần thiết
    }

    public void setModel(DTO_DanhSachSanPham md) {
        txtMaSanPham.setText(md.getMaSanPham());
        txtTenSanPham.setText(md.getTenSanPham());
        txtMoTa.setText(md.getMoTa());
        cboLoaiSanPham.setSelectedItem(md.getTenLoaiSP());
        if (md.getTrangThai().equalsIgnoreCase("Hoạt động")) {
            rdoHoatDong.setSelected(true);
        } else if (md.getTrangThai().equalsIgnoreCase("Ngưng hoạt động")) {
            rdoNgungHoatDong.setSelected(true);
        }

        idSanPham_ToanCuc = md.getIdSanPham();
        iconImage = new ImageIcon(md.getAnhSanPham());
        txtImageSanPham.setIcon(iconImage);
        txtImageSanPham.setText("");
    }

    public void resetForm() {
        txtMaSanPham.setText("");
        txtTenSanPham.setText("");
        cboHang.setSelectedIndex(0);
        cboLoaiSanPham.setSelectedIndex(0);
        txtMoTa.setText("");
        rdoHoatDong.setSelected(true);
        txtTimKiemDanhSachSanPham.setText("");
        txtImageSanPham.setIcon(null);
        txtImageSanPham.setText("Ảnh sản phẩm");
        linkImage = null;

        rdoHoatDong.setEnabled(false);
        rdoNgungHoatDong.setEnabled(false);
        rdoHoatDong.setSelected(true);
    }
    private void rdoNgungHoatDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNgungHoatDongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoNgungHoatDongActionPerformed

    private void tblDanhSachSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachSanPhamMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            int index = tblDanhSachSanPham.getSelectedRow();
            setModel(listdto.get(index));
            initCboChiTietSanPham(idSanPham_ToanCuc);

            cboHang.setSelectedItem(listdto.get(index).getTenHang());

            rdoHoatDong.setEnabled(true);
            rdoNgungHoatDong.setEnabled(true);
            if (cboChiTietSanPham.getSelectedItem() == null) {
                txtGia.setText("");
            }
            System.out.println("Id sp toàn cục : " + idSanPham_ToanCuc);
        } else if (evt.getClickCount() == 2) {
            tblDanhSachSanPham.clearSelection();
            idSanPham_ToanCuc = null;
            System.out.println("Id sp toàn cục : " + idSanPham_ToanCuc);
            resetForm();
            cboChiTietSanPham.removeAllItems();
//            initCboChiTietSanPham(idSanPham_ToanCuc);
            if (cboChiTietSanPham.getSelectedItem() == null) {
                txtGia.setText("");
            }
        }

        int column = tblDanhSachSanPham.columnAtPoint(evt.getPoint());
        int row = tblDanhSachSanPham.rowAtPoint(evt.getPoint());
        if (column == 10) { // giả sử "Tiêu đề 11" là cột thứ 11 (chỉ số 10)
            boolean checked = (Boolean) tblDanhSachSanPham.getValueAt(row, column);
            DTO_DanhSachSanPham product = listdto.get(row);

            if (checked == true) {
                listSP_XuatFile.add(product);
            } else {
                listSP_XuatFile.remove(product);
            }
            for (DTO_DanhSachSanPham dt : listSP_XuatFile) {
                System.out.println("++++++++++++++++++++++++++++++++++++++++++");
                System.out.println("Danh sách chọn sp xuất : " + dt);
                System.out.println("++++++++++++++++++++++++++++++++++++++++++");
            }
        }

    }//GEN-LAST:event_tblDanhSachSanPhamMouseClicked

    private void txtTimKiemDanhSachSanPhamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemDanhSachSanPhamKeyReleased
        // TODO add your handling code here:
        String text = txtTimKiemDanhSachSanPham.getText();
        if (text.trim().length() == 0) {
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
        }
        System.out.println("Kí tự được nhập vào input timf kiếm :" + txtTimKiemDanhSachSanPham.getText());
    }//GEN-LAST:event_txtTimKiemDanhSachSanPhamKeyReleased

    private void cboChiTietSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboChiTietSanPhamMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_cboChiTietSanPhamMouseClicked

    private void tblDanhSachSanPhamMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachSanPhamMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDanhSachSanPhamMouseEntered

    private void cboChiTietSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboChiTietSanPhamActionPerformed
        // TODO add your handling code here:
        if (idSanPham_ToanCuc != null) {
            List<DTO_MauSacAndGia_CTSP> list = svDSSP.selectCTSPMauSacandCTSPGiaByIDSanPham(idSanPham_ToanCuc);
            for (DTO_MauSacAndGia_CTSP ms : list) {
                if (cboChiTietSanPham.getSelectedItem() != null && cboChiTietSanPham.getSelectedItem().equals(ms.getMauSac())) {
                    txtGia.setText(String.valueOf(ms.getGia()));
                }
            }
        } else {
            txtGia.setText("");
        }
//        cboHang.setSelectedItem("HP");
    }//GEN-LAST:event_cboChiTietSanPhamActionPerformed

    private void btnChiTietSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTietSanPhamActionPerformed
        // TODO add your handling code here:

        if (idSanPham_ToanCuc == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm ở [Danh Sách Sản Phẩm] trước khi Xem/Thêm/Sửa Chi Tiết Sản Phẩm .", "Thông Báo Hệ Thống !", 0);
        } else if (idSanPham_ToanCuc != null) {
            new Form_ChiTietSanPham(idSanPham_ToanCuc).setVisible(true);
        }
    }//GEN-LAST:event_btnChiTietSanPhamActionPerformed

    private void btnThemMoiSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemMoiSanPhamActionPerformed
        // TODO add your handling code here:

        for (MD_Hang_CN h : listHang) {
            if (cboHang.getSelectedItem().equals(h.getTenHang())) {
                id1 = h.getIdHang();
            }
        }
        for (MD_LoaiSP_CN lsp : listLoaiSP) {
            if (cboLoaiSanPham.getSelectedItem().equals(lsp.getTenLoaiSanPham())) {
                id2 = lsp.getIdLoaiSanPham();
            }
        }
        if (txtMaSanPham.getText() != null && !txtMaSanPham.getText().isEmpty()
                && txtTenSanPham.getText() != null && !txtTenSanPham.getText().isEmpty()) {

            if (svDSSP.insert(getModel(id1, id2)) == 1) {
                JOptionPane.showMessageDialog(this, "Thêm mới thành công");
                resetForm();
            } else if (svDSSP.insert(getModel(id1, id2)) == 0) {
                JOptionPane.showMessageDialog(null, "Mã sản phẩm đã tồn tại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                txtMaSanPham.requestFocus();
            }
        } else {
            if (txtMaSanPham.getText() == null || txtMaSanPham.getText().isEmpty()) {
                txtMaSanPham.requestFocus();
                JOptionPane.showMessageDialog(this, "Vui lòng không để trống Mã Sản Phẩm!", "Thông Báo Hệ Thống", JOptionPane.WARNING_MESSAGE);
            } else if (txtTenSanPham.getText() == null || txtTenSanPham.getText().isEmpty()) {
                txtTenSanPham.requestFocus();
                JOptionPane.showMessageDialog(this, "Vui lòng không để trống Tên Sản Phẩm!", "Thông Báo Hệ Thống", JOptionPane.WARNING_MESSAGE);
            }
        }

        listdto = svDSSP.selectAllDSS();
        filltableSanPham(listdto);


    }//GEN-LAST:event_btnThemMoiSanPhamActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        resetForm();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if (idSanPham_ToanCuc == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm cần xóa ở [Danh Sách Sản Phẩm] trước khi xóa .", "Thông Báo Hệ Thống !", 0);
        } else if (idSanPham_ToanCuc != null) {

            int response = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn xóa không ?", "Thông Báo Hệ Thống", 0, 3, null);
            if (response == JOptionPane.YES_OPTION) {
                System.out.println("IdSP toàn cục : " + idSanPham_ToanCuc);
                svDSSP.delete(idSanPham_ToanCuc);
                listdto = svDSSP.selectAllDSS();
                filltableSanPham(listdto);
                resetForm();
                JOptionPane.showMessageDialog(this, "Xóa thành công");

                cboChiTietSanPham.removeAllItems();
                if (cboChiTietSanPham.getSelectedItem() == null) {
                    txtGia.setText("");
                }
            } else if (response == JOptionPane.NO_OPTION) {

            }

        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:

        if (idSanPham_ToanCuc == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm cần sửa ở [Danh Sách Sản Phẩm] trước khi sửa .", "Thông Báo Hệ Thống !", 0);
        } else if (idSanPham_ToanCuc != null) {

            int response = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn sửa không ?", "Thông Báo Hệ Thống", 0, 3, null);
            if (response == JOptionPane.YES_OPTION) {
                for (MD_Hang_CN h : listHang) {
                    if (cboHang.getSelectedItem().equals(h.getTenHang())) {
                        id1 = h.getIdHang();
                    }
                }
                for (MD_LoaiSP_CN lsp : listLoaiSP) {
                    if (cboLoaiSanPham.getSelectedItem().equals(lsp.getTenLoaiSanPham())) {
                        id2 = lsp.getIdLoaiSanPham();
                    }
                }
                String Img = tachLinkAnh(txtImageSanPham.getIcon().toString());
                System.out.println("Link ảnh sau khi custom Img " + Img);
//                if (svDSSP.update(getModel(id1, id2), idSanPham_ToanCuc, Img) == 1) {
//                    JOptionPane.showMessageDialog(this, "Update thành công");
//                    resetForm();
//                } else {
//                    JOptionPane.showMessageDialog(null, "Mã sản phẩm đã tồn tại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
//                    txtMaSanPham.requestFocus();
//                }

                if (txtMaSanPham.getText() != null && !txtMaSanPham.getText().isEmpty()
                        && txtTenSanPham.getText() != null && !txtTenSanPham.getText().isEmpty()) {

                    if (svDSSP.update(getModel(id1, id2), idSanPham_ToanCuc, Img) == 1) {
                        JOptionPane.showMessageDialog(this, "Update thành công");
                        resetForm();
                    } else if (svDSSP.insert(getModel(id1, id2)) == 0) {
                        JOptionPane.showMessageDialog(null, "Mã sản phẩm đã tồn tại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        txtMaSanPham.requestFocus();
                    }
                } else {
                    if (txtMaSanPham.getText() == null || txtMaSanPham.getText().isEmpty()) {
                        txtMaSanPham.requestFocus();
                        JOptionPane.showMessageDialog(this, "Vui lòng không để trống Mã Sản Phẩm!", "Thông Báo Hệ Thống", JOptionPane.WARNING_MESSAGE);
                    } else if (txtTenSanPham.getText() == null || txtTenSanPham.getText().isEmpty()) {
                        txtTenSanPham.requestFocus();
                        JOptionPane.showMessageDialog(this, "Vui lòng không để trống Tên Sản Phẩm!", "Thông Báo Hệ Thống", JOptionPane.WARNING_MESSAGE);
                    }
                }

                listdto = svDSSP.selectAllDSS();
                filltableSanPham(listdto);
            } else if (response == JOptionPane.NO_OPTION) {

            }

        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void txtImageSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtImageSanPhamMouseClicked

        // TODO add your handling code here:
        // TODO add your handling code here:
JFileChooser fileChooser = new JFileChooser();

// Set file filter to allow only image files
FileNameExtensionFilter imageFilter = new FileNameExtensionFilter(
        "Image files", "jpg", "jpeg", "png", "gif");
fileChooser.setFileFilter(imageFilter);

// Show the dialog
int returnValue = fileChooser.showOpenDialog(this);

// If a file is selected, check its dimensions
if (returnValue == JFileChooser.APPROVE_OPTION) {
    File selectedFile = fileChooser.getSelectedFile();
    ImageIcon icon = new ImageIcon(selectedFile.getAbsolutePath());
    
    // Get image dimensions
    int width = icon.getIconWidth();
    int height = icon.getIconHeight();
    
    // Check if the dimensions exceed the specified limits
    if (width > 320 || height > 274) {
        // Show error message and do not set the icon
        JOptionPane.showMessageDialog(this, "Ảnh Sản phẩm không được quá 320x270 pixels.", "Thông Báo Hệ Thống !", JOptionPane.ERROR_MESSAGE);
    } else {
        // Set the icon and clear the text
        txtImageSanPham.setIcon(icon);
        txtImageSanPham.setText("");
        linkImage = selectedFile.getAbsolutePath();
        // Optionally, you can print the link to the console
        // System.out.println("Link image: " + selectedFile.getAbsolutePath());
    }
}

    }//GEN-LAST:event_txtImageSanPhamMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        System.out.println("=============================================");
//        for (DTO_DanhSachSanPham dt : listSP_XuatFile) {
//            System.out.println("Danh sách xuất file 2: " + dt);
//        }

        for (DTO_DanhSachSanPham dt : listSP_XuatFile) {
            List<DTO_Ctsp> o = svCTSP.selectAllCTSPByIDSP(dt.getIdSanPham());
            if (o != null && !o.isEmpty()) {

                for (DTO_Ctsp c : o) {

                    DTO_SanPham_CTSP dtoSP_CTSP = new DTO_SanPham_CTSP(
                            dt.getIdSanPham(), dt.getMaSanPham(), dt.getAnhSanPham(), dt.getTenSanPham(),
                            dt.getTenHang(), dt.getTenLoaiSP(), dt.getTrangThai(), dt.getMoTa(),
                            dt.getNgayTao(), dt.getNgaySua(),
                            c.getIdCtsp(), c.getMauSac(), c.getSoLuongTon(), c.getMoTa(),
                            c.getTrangThai(), c.getGiaBan(), c.getNgayTao(), c.getNgaySua()
                    );
                    boolean exists = false;
                    for (DTO_SanPham_CTSP l1 : this.dtoSP_CTSP) {
                        if (dtoSP_CTSP.getIdCtsp() == l1.getIdCtsp()) {
                            exists = true;
                            break;
                        }
                    }
                    if (!exists) {
                        this.dtoSP_CTSP.add(dtoSP_CTSP);
                    }
                }
            } else {
                DTO_SanPham_CTSP dtoSP_CTSP = new DTO_SanPham_CTSP(
                        dt.getIdSanPham(), dt.getMaSanPham(), dt.getAnhSanPham(), dt.getTenSanPham(),
                        dt.getTenHang(), dt.getTenLoaiSP(), dt.getTrangThai(), dt.getMoTa(),
                        dt.getNgayTao(), dt.getNgaySua(),
                        -1, null, -1, null,
                        null, null, null, null
                );
                this.dtoSP_CTSP.add(dtoSP_CTSP);
            }
        }

        for (DTO_SanPham_CTSP ctsp : dtoSP_CTSP) {
            System.out.println("Danh sách chọn sp xuất==== : " + ctsp);
        }

        new Form_XuatFile(dtoSP_CTSP, listSP_XuatFile).setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Swing_Custom.CustomButton1 btnChiTietSanPham;
    private Swing_Custom.CustomButton1 btnLamMoi;
    private Swing_Custom.CustomButton1 btnSua;
    private Swing_Custom.CustomButton1 btnThemMoiSanPham;
    private Swing_Custom.CustomButton1 btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboChiTietSanPham;
    private javax.swing.JComboBox<String> cboHang;
    private javax.swing.JComboBox<String> cboLoaiSanPham;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpnImageSanPham;
    private Swing_Custom.Panel_Custom panel_Custom1;
    private Swing_Custom.Panel_Custom panel_Custom2;
    private Swing_Custom.Panel_Custom panel_Custom3;
    private javax.swing.JRadioButton rdoHoatDong;
    private javax.swing.JRadioButton rdoNgungHoatDong;
    private javax.swing.JTable tblDanhSachSanPham;
    private javax.swing.JTextField txtGia;
    private javax.swing.JLabel txtImageSanPham;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtTenSanPham;
    private javax.swing.JTextField txtTimKiemDanhSachSanPham;
    // End of variables declaration//GEN-END:variables
}
