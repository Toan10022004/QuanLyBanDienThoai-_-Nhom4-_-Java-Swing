/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package thinh;
//import com.itextpdf.text.Document;
//import com.itextpdf.text.DocumentException;
//import com.itextpdf.text.Paragraph;
//import com.itextpdf.text.pdf.PdfPTable;
//import com.itextpdf.text.pdf.PdfWriter;
//import com.itextpdf.text.*;
//import com.itextpdf.text.pdf.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import java.util.ArrayList;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
//import responsitory.HoaDonRe;
/**
 *
 * @author thinh
 */
public class Form_HoaDon extends javax.swing.JPanel {
    ArrayList<Model_HoaDon> listView = new ArrayList<>();
    DefaultTableModel model;
    HoaDonRe hds = new HoaDonRe();
    /**
     * Creates new form HoaDonF
     */
    public Form_HoaDon() throws SQLException {
        initComponents();
        listView = hds.getAllHoaDon();
        filltoTable();
    }
    public void filltoTable() {
        model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
        for (Model_HoaDon hoadon : listView) {
            model.addRow(hoadon.toRowTable());
        }
    }
//    private void exportPDF(HoaDon hoadon) {
//        Document document = new Document();
//        try {
//            String filePath = "D:/HoaDon/HoaDon_" + hoadon.getMaHD() + ".pdf";
//            PdfWriter.getInstance(document, new FileOutputStream(filePath));
//            document.open();
//            
//             Font font = FontFactory.getFont(FontFactory.HELVETICA, 12, BaseColor.BLACK);
//            
//            document.add(new Paragraph("Hóa Đơn", font));
//            
//            document.add(new Paragraph("Hóa Đơn"));
//            
//            PdfPTable table = new PdfPTable(6); // Số cột
//            
//            // Thêm header cho bảng
//            table.addCell("Mã hóa đơn");
//            table.addCell("Tên khách hàng");
//            table.addCell("Tên sản phẩm");
//            table.addCell("Số lượng");
//            table.addCell("Ghi chú");
//            table.addCell("Thành tiền");
//            
//            // Thêm dữ liệu vào bảng
//            table.addCell(hoadon.getMaHD());
//            table.addCell(hoadon.getTenKH());
//            table.addCell(hoadon.getTenSP());
//            table.addCell(String.valueOf(hoadon.getSoLuong()));
//            table.addCell(hoadon.getGhiChu());
//            table.addCell(String.valueOf(hoadon.getThanhTien()));
//            
//            document.add(table);
//            document.close();
//            
//            JOptionPane.showMessageDialog(this, "Hóa đơn đã được xuất ra file PDF thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//        } catch (FileNotFoundException | DocumentException ex) {
//            Logger.getLogger(HoaDonForm.class.getName()).log(Level.SEVERE, null, ex);
//            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi xuất hóa đơn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
//        }
//    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnXuat = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hóa Đơn");

        tblHoaDon.setForeground(new java.awt.Color(0, 51, 51));
        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Tên khách hàng", "Tên sản phẩm", "Số lượng", "Ghi chú", "Chi phí"
            }
        ));
        jScrollPane1.setViewportView(tblHoaDon);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Danh sách hóa đơn đã tạo");

        txtSearch.setBackground(new java.awt.Color(241, 213, 213));
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Source Han Sans CN Regular", 2, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 51));
        jLabel3.setText("Tìm kiếm:");

        btnXuat.setBackground(new java.awt.Color(255, 255, 102));
        btnXuat.setForeground(new java.awt.Color(255, 51, 255));
        btnXuat.setText("Xuất hóa đơn");
        btnXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(0, 51, 255));
        btnSearch.setForeground(new java.awt.Color(255, 255, 51));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnXuat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch)))
                        .addContainerGap(253, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(300, 300, 300))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed

    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatActionPerformed
        int selectedRow = tblHoaDon.getSelectedRow();
        if (selectedRow >= 0) {
            // Lấy dữ liệu từ dòng được chọn
            Model_HoaDon selectedHoaDon = listView.get(selectedRow);
//            exportPDF(selectedHoaDon);
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một hóa đơn để xuất!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnXuatActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String keyword = txtSearch.getText().trim().toLowerCase();
        ArrayList<Model_HoaDon> filteredList = new ArrayList<>();

        for (Model_HoaDon hoadon : listView) {
            if (hoadon.getTenKH().toLowerCase().contains(keyword) ||
                hoadon.getTenSP().toLowerCase().contains(keyword) ||
                hoadon.getMaHD().toLowerCase().contains(keyword)) {
                filteredList.add(hoadon);
            }
        }

        model.setRowCount(0); // Xóa tất cả các hàng trong bảng
        for (Model_HoaDon hoadon : filteredList) {
            model.addRow(hoadon.toRowTable());
        }
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnXuat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
